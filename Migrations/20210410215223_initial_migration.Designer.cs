// <auto-generated />
using System;
using BasicBilling.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BasicBilling.API.Migrations
{
  [DbContext(typeof(BasicBillingContext))]
  [Migration("20210410215223_initial_migration")]
  partial class initial_migration
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "3.1.14");

      modelBuilder.Entity("BasicBilling.Data.Entities.Bill", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<int>("ClientId")
                      .HasColumnType("INTEGER");

            b.Property<DateTime>("CreatedOn")
                      .HasColumnType("TEXT");

            b.Property<int>("Period")
                      .HasColumnType("INTEGER");

            b.Property<int>("ServiceId")
                      .HasColumnType("INTEGER");

            b.Property<int>("Status")
                      .HasColumnType("INTEGER");

            b.Property<DateTime>("UpdatedOn")
                      .HasColumnType("TEXT");

            b.HasKey("Id");

            b.HasIndex("ClientId");

            b.HasIndex("ServiceId");

            b.ToTable("Bills");
          });

      modelBuilder.Entity("BasicBilling.Data.Entities.Client", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<DateTime>("CreatedOn")
                      .HasColumnType("TEXT");

            b.Property<string>("Firstname")
                      .IsRequired()
                      .HasColumnType("TEXT")
                      .HasMaxLength(250);

            b.Property<string>("Lastname")
                      .IsRequired()
                      .HasColumnType("TEXT")
                      .HasMaxLength(250);

            b.Property<string>("Middlename")
                      .HasColumnType("TEXT")
                      .HasMaxLength(250);

            b.Property<DateTime>("UpdatedOn")
                      .HasColumnType("TEXT");

            b.HasKey("Id");

            b.ToTable("Clients");
          });

      modelBuilder.Entity("BasicBilling.Data.Entities.Payment", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<int>("BillId")
                      .HasColumnType("INTEGER");

            b.Property<DateTime>("CreatedOn")
                      .HasColumnType("TEXT");

            b.Property<DateTime>("UpdatedOn")
                      .HasColumnType("TEXT");

            b.HasKey("Id");

            b.HasIndex("BillId");

            b.ToTable("Payment");
          });

      modelBuilder.Entity("BasicBilling.Data.Entities.Service", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<DateTime>("CreatedOn")
                      .HasColumnType("TEXT");

            b.Property<string>("Description")
                      .HasColumnType("TEXT");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasColumnType("TEXT");

            b.Property<string>("Shortname")
                      .IsRequired()
                      .HasColumnType("TEXT");

            b.Property<DateTime>("UpdatedOn")
                      .HasColumnType("TEXT");

            b.HasKey("Id");

            b.ToTable("Services");
          });

      modelBuilder.Entity("BasicBilling.Data.Entities.Bill", b =>
          {
            b.HasOne("BasicBilling.Data.Entities.Client", "Client")
                      .WithMany()
                      .HasForeignKey("ClientId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("BasicBilling.Data.Entities.Service", "Service")
                      .WithMany()
                      .HasForeignKey("ServiceId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("BasicBilling.Data.Entities.Payment", b =>
          {
            b.HasOne("BasicBilling.Data.Entities.Bill", "Bill")
                      .WithMany()
                      .HasForeignKey("BillId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });
#pragma warning restore 612, 618
    }
  }
}
